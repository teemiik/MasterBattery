<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.masterclean.system.app"
    android:versionCode="3"
    android:versionName="1.2" >

    <uses-sdk
        android:minSdkVersion="15"
        android:targetSdkVersion="25" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <uses-permission android:name="com.android.alarm.permission.SET_ALARM" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> <!-- Create a unique permission for your app and use it so only your app can receive your OneSignal messages. -->
    <permission
        android:name="com.masterclean.system.app.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.masterclean.system.app.permission.C2D_MESSAGE" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" /> <!-- Required, makes sure notifications are delivered on time. -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!--
 Required so the device vibrates on receiving a push notification.
         Vibration settings of the device still apply.
    -->
    <uses-permission android:name="android.permission.VIBRATE" />
    <!--
 Use to restore notifications the user hasn't interacted with.
         They could be missed notifications if the user reboots their device if this isn't in place.
    -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /> <!-- START: ShortcutBadger -->
    <!-- Samsung -->
    <uses-permission android:name="com.sec.android.provider.badge.permission.READ" />
    <uses-permission android:name="com.sec.android.provider.badge.permission.WRITE" /> <!-- HTC -->
    <uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT" /> <!-- Sony -->
    <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE" />
    <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE" /> <!-- Apex -->
    <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT" /> <!-- Solid -->
    <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE" /> <!-- Huawei -->
    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />
    <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS" /> <!-- ZUK -->
    <uses-permission android:name="android.permission.READ_APP_BADGE" /> <!-- OPPO -->
    <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS" /> <!-- EvMe -->
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ" />
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE" />

    <application
        android:name="com.masterclean.system.app.Application.App"
        android:allowBackup="true"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher_new"
        android:label="@string/app_name"
        android:screenOrientation="portrait"
        android:supportsRtl="true"
        android:theme="@style/AppTheme" >
        <activity
            android:name="com.masterclean.system.app.SplashScreen"
            android:label="@string/app_name"
            android:screenOrientation="portrait" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.masterclean.system.app.MainActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.SavingPowerPopUp"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.UltraApplying"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.Sacnning_Junk"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.ScannerCPU"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.Pick_Apps"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.Transparent" />
        <activity
            android:name="com.masterclean.system.app.UltraPopUp"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.SaverBatteryBlack"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.ModeNormal"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.masterclean.system.app.SavingPowerComplition"
            android:screenOrientation="portrait" />

        <receiver android:name="com.masterclean.system.app.BoosterAlarm" />
        <receiver android:name="com.masterclean.system.app.JunkAlaram" />
        <receiver android:name="com.masterclean.system.app.AppListener" >
            <intent-filter android:priority="100" >
                <action android:name="android.intent.action.PACKAGE_INSTALL" />
                <action android:name="android.intent.action.PACKAGE_ADDED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>
        <receiver android:name="com.masterclean.system.app.PowerConnected" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
            </intent-filter>
        </receiver>

        <!-- <activity android:name="" -->
        <meta-data
            android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/facebook_app_id" />

        <provider
            android:name="com.facebook.FacebookContentProvider"
            android:authorities="com.facebook.app.FacebookContentProvider1574865469202850"
            android:exported="true" />

        <meta-data
            android:name="android.support.VERSION"
            android:value="25.4.0" />

        <activity
            android:name="com.facebook.FacebookActivity"
            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
            android:theme="@style/com_facebook_activity_theme" />
        <activity android:name="com.facebook.CustomTabMainActivity" /> <!-- Yandex Mobile Metrica Analytics: common service -->
        <service
            android:name="com.yandex.metrica.MetricaService"
            android:enabled="true"
            android:exported="true"
            android:process=":Metrica" >
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />

                <action android:name="com.yandex.metrica.IMetricaService" />

                <data android:scheme="metrica" />
            </intent-filter>

            <meta-data
                android:name="metrica:api:level"
                android:value="64" />
        </service>
        <service
            android:name="com.yandex.metrica.ConfigurationService"
            android:enabled="true"
            android:exported="true"
            android:process=":Metrica" >
            <meta-data
                android:name="metrica:configuration:api:level"
                android:value="2" />

            <intent-filter>
                <action android:name="com.yandex.metrica.configuration.ACTION_START" />
            </intent-filter>
        </service>
        <service
            android:name="com.yandex.metrica.ConfigurationJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":Metrica" >
        </service> <!-- Yandex Mobile Metrica Analytics: main receiver -->
        <receiver
            android:name="com.yandex.metrica.MetricaEventHandler"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <meta-data
            android:name="onesignal_app_id"
            android:value="6914e1e7-42c9-4fb6-aa59-10e124ef63be" /> <!-- Deprecated - Pulled from OneSignal dashboard. -->
        <meta-data
            android:name="onesignal_google_project_number"
            android:value="str:REMOTE" />

        <receiver
            android:name="com.onesignal.GcmBroadcastReceiver"
            android:permission="com.google.android.c2dm.permission.SEND" >

            <!-- High priority so OneSignal payloads can be filtered from other GCM receivers if filterOtherGCMReceivers is enabled. -->
            <intent-filter android:priority="999" >
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.masterclean.system.app" />
            </intent-filter>
        </receiver>
        <receiver android:name="com.onesignal.NotificationOpenedReceiver" />

        <service android:name="com.onesignal.GcmIntentService" /> <!-- For Android O -->
        <service
            android:name="com.onesignal.GcmIntentJobService"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.onesignal.SyncJobService"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.onesignal.RestoreJobService"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.onesignal.RestoreKickoffJobService"
            android:permission="android.permission.BIND_JOB_SERVICE" /> <!-- END - For Android O -->
        <service android:name="com.onesignal.SyncService" />

        <activity
            android:name="com.onesignal.PermissionsActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <service android:name="com.onesignal.NotificationRestoreService" />

        <receiver android:name="com.onesignal.BootUpReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_BOOT_COMPLETED" />
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
            </intent-filter>
        </receiver>
        <receiver android:name="com.onesignal.UpgradeReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
            </intent-filter>
        </receiver>
        <!--
         The initialization ContentProvider will call FacebookSdk.sdkInitialize automatically
         with the application context. This config is merged in with the host app's manifest,
         but there can only be one provider with the same authority activated at any given
         point; so if the end user has two or more different apps that use Facebook SDK, only the
         first one will be able to use the provider. To work around this problem, we use the
         following placeholder in the authority to identify each host application as if it was
         a completely different provider.
        -->
        <provider
            android:name="com.facebook.internal.FacebookInitProvider"
            android:authorities="com.masterclean.system.app.FacebookInitProvider"
            android:exported="false" /> <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent" />
        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
    </application>

</manifest> <!-- android:theme="@android:style/Theme.NoTitleBar.Fullscreen" -->
